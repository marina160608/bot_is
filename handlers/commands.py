from aiogram.types import Message
from aiogram import Router, F
from aiogram.filters import Command, or_f
from keyboards.inline import about_kb
from keyboards.inline import criteria_doc
from keyboards.inline import examples_essay
from keyboards.inline import start_m1
from keyboards.inline import start_m2


command_router = Router()


@command_router.message(or_f(Command('start'), F.text == 'start'))
async def start_handler(message: Message):
    start_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–¥, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –∏—Ç–æ–≥–æ–≤–æ–º—É —Å–æ—á–∏–Ω–µ–Ω–∏—é, –ø–æ—ç—Ç–æ–º—É —Å–æ–±–∏—Ä–∞—é—Å—å –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º "
        "–∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–π –¥–ª—è —Ç–≤–æ–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ üòâ \n"
        "–í—ã–±–∏—Ä–∞–π —Ä–∞–∑–¥–µ–ª –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª —Ç–µ–º –ò–°, –∞ —è –ø–æ–¥–±–µ—Ä—É –¥–ª—è —Ç–µ–±—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ üëåüèª"
        "–ù–∞–∂–∏–º–∞–π –Ω–∞ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É üëáüèª"
    )
    await message.answer(text=start_text, reply_markup=start_m1)


@command_router.message(or_f(Command('start'), F.text == 'start'))
async def start_handler(message: Message):
    start_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–¥, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –∏—Ç–æ–≥–æ–≤–æ–º—É —Å–æ—á–∏–Ω–µ–Ω–∏—é, –ø–æ—ç—Ç–æ–º—É —Å–æ–±–∏—Ä–∞—é—Å—å –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º "
        "–∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–π –¥–ª—è —Ç–≤–æ–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ üòâ \n"
        "–í—ã–±–∏—Ä–∞–π —Ä–∞–∑–¥–µ–ª –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª —Ç–µ–º –ò–°, –∞ —è –ø–æ–¥–±–µ—Ä—É –¥–ª—è —Ç–µ–±—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ üëåüèª"
        "–ù–∞–∂–∏–º–∞–π –Ω–∞ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É üëáüèª"
    )
    await message.answer(text=start_text, reply_markup=start_m2)


@command_router.message(Command('about'))
async def about_message(message: Message):
    await message.answer(text="–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –∏—Ç–æ–≥–æ–≤–æ–º—É —Å–æ—á–∏–Ω–µ–Ω–∏—é –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É! –ü–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å "
                             "–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –ª—é–±—É—é —Ç–µ–º—É üòå")


@command_router.message(Command('help'))
async def help_handler(message: Message):
    help_text = '–ù–∞–∂–º–∏ –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –º–Ω–æ–π :) /start '
    await message.answer(text=help_text)


@command_router.message(Command('task'))
async def about_IS_hendler(message: Message):
    await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ª—å–∫–æ –û–î–ù–£ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ç–µ–º –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ—á–∏–Ω–µ–Ω–∏—è, –≤ –±–ª–∞–Ω–∫–µ –∑–∞–ø–∏—Å–∏ –∏—Ç–æ–≥–æ–≤–æ–≥–æ'
                              '—Å–æ—á–∏–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã —Å–æ—á–∏–Ω–µ–Ω–∏—è.'
                              '–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ—á–∏–Ω–µ–Ω–∏–µ-—Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–µ –Ω–∞ —ç—Ç—É —Ç–µ–º—É. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –æ–±—ä—ë–º ‚àí –æ—Ç 350 —Å–ª–æ–≤. –ï—Å–ª–∏ –≤ '
                              '—Å–æ—á–∏–Ω–µ–Ω–∏–∏ –º–µ–Ω–µ–µ 250 —Å–ª–æ–≤ (–≤ –ø–æ–¥—Å—á—ë—Ç –≤–∫–ª—é—á–∞—é—Ç—Å—è –≤—Å–µ—Å–ª–æ–≤–∞, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ —Å–ª—É–∂–µ–±–Ω—ã–µ),'
                              '—Ç–æ –∑–∞ —Ç–∞–∫—É—é —Ä–∞–±–æ—Ç—É —Å—Ç–∞–≤–∏—Ç—Å—è ¬´–Ω–µ–∑–∞—á—ë—Ç¬ª. –í —Ä–∞–º–∫–∞—Ö –∑–∞—è–≤–ª–µ–Ω–Ω–æ–π —Ç–µ–º—ã —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ —Å–≤–æ—é '
                              '–ø–æ–∑–∏—Ü–∏—é, –¥–æ–∫–∞–∂–∏—Ç–µ–µ—ë,'
                              '–ø–æ–¥–∫—Ä–µ–ø–ª—è—è –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã—Ö'
                              '–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–π. –ú–æ–∂–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —É—Å—Ç–Ω–æ–≥–æ –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ (–∑–∞ '
                              '–∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –º–∞–ª—ã—Ö –∂–∞–Ω—Ä–æ–≤), –∞ —Ç–∞–∫–∂–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é, –¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—É—é,'
                              '–º–µ–º—É–∞—Ä–Ω—É—é, –ø—É–±–ª–∏—Ü–∏—Å—Ç–∏—á–µ—Å–∫—É—é, –Ω–∞—É—á–Ω—É—é –∏ –Ω–∞—É—á–Ω–æ-–ø–æ–ø—É–ª—è—Ä–Ω—É—é –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É (–≤ —Ç–æ–º —á–∏—Å–ª–µ '
                              '—Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫—É—é, –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é, –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–æ–≤–µ–¥—á–µ—Å–∫—É—é,'
                              '–∏—Å–∫—É—Å—Å—Ç–≤–æ–≤–µ–¥—á–µ—Å–∫—É—é), –¥–Ω–µ–≤–Ω–∏–∫–∏, –æ—á–µ—Ä–∫–∏, –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—É—é –∫—Ä–∏—Ç–∏–∫—É –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è '
                              '–æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∏ –º–∏—Ä–æ–≤–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã.'
                              '–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø–æ—Ä—ã –Ω–∞ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≤–ª–µ—á—ë–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ –Ω–µ —Ç–∞–∫ –≤–∞–∂–Ω–æ, '
                              '–∫–∞–∫ –≥–ª—É–±–∏–Ω–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç–µ–º—ã —Å –æ–ø–æ—Ä–æ–π –Ω–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª).'
                              '–ü—Ä–æ–¥—É–º–∞–π—Ç–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏—é —Å–æ—á–∏–Ω–µ–Ω–∏—è. –°–æ–±–ª—é–¥–∞–π—Ç–µ —Ä–µ—á–µ–≤—ã–µ –∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –Ω–æ—Ä–º—ã ('
                              '—Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º —Å–ª–æ–≤–∞—Ä—ë–º).'
                              '–°–æ—á–∏–Ω–µ–Ω–∏–µ –ø–∏—à–∏—Ç–µ —á—ë—Ç–∫–æ –∏ —Ä–∞–∑–±–æ—Ä—á–∏–≤–æ. –ü—Ä–∏ –æ—Ü–µ–Ω–∫–µ —Å–æ—á–∏–Ω–µ–Ω–∏—è –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è '
                              '—Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –æ–±—ä–µ–º–∞ –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'
                              '–Ω–∞–ø–∏—Å–∞–Ω–∏—è —Å–æ—á–∏–Ω–µ–Ω–∏—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º–µ, —É–º–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é –∏ '
                              '–æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª.')


@command_router.message(Command('criteria'))
async def criteria_hendler(message: Message):
    await message.answer(text='–°–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:\n'
                              '- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ–º–µ\n'
                              '- –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–∞—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏—è\n'
                              '- –ú–∏–Ω–∏–º—É–º 250 —Å–ª–æ–≤\n'
                              ' - –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Å–æ—á–∏–Ω–µ–Ω–∏—è \n'
                              '–ú–µ–Ω–µ–µ –≤–∞–∂–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏\n '
                              '- –ö–æ–º–ø–æ–∑–∏—Ü–∏—è\n'
                              '- –ö–∞—á–µ—Å—Ç–≤–æ —Ä–µ—á–∏\n '
                              '- –ì—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å\n'
                              '–í—ã–±–∏—Ä–∞–π –∫—Ä–∏—Ç–µ—Ä–∏–π, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—à—å –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ–¥—Ä–æ–±–Ω–µ–µ:', reply_markup=criteria_doc)


@command_router.message(Command('literature'))
async def about_info(message: Message):
    about_text = "–¢—ã –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /literature \n–í—ã–±–∏—Ä–∞–π —Ä–∞–∑–¥–µ–ª –ò–° üëáüèª "
    await message.answer(text=about_text, reply_markup=about_kb)


@command_router.message(Command('examples_essay'))
async def examples(message: Message):
    await message.answer(text='–í–æ—Ç –ø—Ä–∏–º–µ—Ä—ã —Å–æ—á–∏–Ω–µ–Ω–∏–π –ø–æ –≤—Å–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º:', reply_markup=examples_essay)


@command_router.message(Command('advice'))
async def advice_handler(message: Message):
    await message.answer(text='üìå –°–æ–≤–µ—Ç—ã –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é:\n'
                              '‚ùóÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π —É –≤–∞—Å –µ—Å—Ç—å –ê–†–ì–£–ú–ï–ù–¢\n'
                              '‚ùóÔ∏è –û—Ç—Ç–∞–ª–∫–∏–≤–∞–π—Ç–µ—Å—å –æ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–∞, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–µ–∑–∏—Å\n'
                              '‚ùóÔ∏è –°–æ—Å—Ç–∞–≤—å—Ç–µ –ø–ª–∞–Ω\n'
                              '- –ü–∏—à–∏—Ç–µ –ø—Ä–æ—â–µ\n'
                              '- –¢—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å\n'
                              '- –ù–µ —Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —É—á–∏—Ç—å —á—É–∂–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ª—É—á—à–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ '
                              '–Ω–∞–ø–∏—Å–∞—Ç—å 1 –∞—Ä–≥—É–º–µ–Ω—Ç, —á–µ–º –≤—ã—É—á–∏—Ç—å 10 —á—É–∂–∏—Ö\n'
                              '- –ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å, –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ—á–∏–Ω–µ–Ω–∏–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Å–¥–∞—Ç—å')


@command_router.message(F.text.lower().contains('–ø–æ–∫–∞'))
async def send_cute_message(message: Message):
    cute_text = '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è)'
    await message.reply(text=cute_text)


@command_router.message(F.sticker)
async def react_to_sticker(message: Message):
    await message.reply(text='–ö–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä! üëç')


@command_router.message(F.photo)
async def react_to_photo(message: Message):
    await message.reply(text='–û—Ç–ª–∏—á–Ω–æ–µ —Ñ–æ—Ç–æ!')


@command_router.message(F.reply_to_message & F.text.lower().contains('thank'))
async def react_to_reply(message: Message):
    await message.reply(text='–¥–∞ –Ω–µ –∑–∞ —á—Ç–æ:)')


@command_router.message()
async def echo_handler(message: Message):
    await message.reply(message.text)
